{
  "address": "0x1b44C932b7450689ee90F4e5a0d5B6Be20EEB15A",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_metaDataUri",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "__uri",
          "type": "string"
        }
      ],
      "name": "MetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "__uri",
          "type": "string"
        }
      ],
      "name": "setUri",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x1da6b2faa029ccc4f5bbe6dedf20ddb4a878bcf98f676397ed8dd9e308635621",
  "receipt": {
    "to": null,
    "from": "0x28D70415C2EF531b012FdBA23c25A421623Bc632",
    "contractAddress": "0x1b44C932b7450689ee90F4e5a0d5B6Be20EEB15A",
    "transactionIndex": 1,
    "gasUsed": "22847291",
    "logsBloom": "0x00000000000000000000000000000000000080000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000400000000000000000000000000020000000000000000000800000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100001000000000000000080000000040020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x36b04c0c6ba76eb4904651849441f054e083a94dbf5049c154691d9e3d0d98fe",
    "transactionHash": "0x1da6b2faa029ccc4f5bbe6dedf20ddb4a878bcf98f676397ed8dd9e308635621",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 85383752,
        "transactionHash": "0x1da6b2faa029ccc4f5bbe6dedf20ddb4a878bcf98f676397ed8dd9e308635621",
        "address": "0x1b44C932b7450689ee90F4e5a0d5B6Be20EEB15A",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000028d70415c2ef531b012fdba23c25a421623bc632"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x36b04c0c6ba76eb4904651849441f054e083a94dbf5049c154691d9e3d0d98fe"
      }
    ],
    "blockNumber": 85383752,
    "cumulativeGasUsed": "22847291",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "ens-metadata-service.appspot.com/name/0x{id}"
  ],
  "numDeployments": 1,
  "solcInputHash": "8ec72e1689cf292e46859fa6e85161de",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_metaDataUri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"__uri\",\"type\":\"string\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"__uri\",\"type\":\"string\"}],\"name\":\"setUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/wrapper/MetadataService.sol\":\"MetadataService\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/wrapper/MetadataService.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ~0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract MetadataService is Ownable {\\n    string private _uri;\\n    mapping(uint256 => string) uris;\\n\\n    event MetadataUpdate(uint256 _tokenId, string __uri);\\n\\n    constructor(string memory _metaDataUri) {\\n        _uri = _metaDataUri;\\n    }\\n\\n    function uri(uint256 tokenId) public view returns (string memory) {\\n        string memory _tokenURI = uris[tokenId];\\n        string memory base = _uri;\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\\n        if (bytes(_tokenURI).length > 0) {\\n            return _tokenURI;\\n        }\\n\\n        return _uri;\\n    }\\n\\n    function setUri(uint256 tokenId, string calldata __uri) public onlyOwner {\\n        uris[tokenId] = __uri;\\n        emit MetadataUpdate(tokenId, __uri);\\n    }\\n}\\n\",\"keccak256\":\"0x6f492626d76f1f99852f38f76028a4ca972b5e42c79fa27490ad8a16daf668bc\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000aa738038062000aa78339810160408190526200003491620000bb565b6200003f3362000055565b60016200004d82826200021f565b5050620002eb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215620000cf57600080fd5b82516001600160401b0380821115620000e757600080fd5b818501915085601f830112620000fc57600080fd5b815181811115620001115762000111620000a5565b604051601f8201601f19908116603f011681019083821181831017156200013c576200013c620000a5565b8160405282815288868487010111156200015557600080fd5b600093505b828410156200017957848401860151818501870152928501926200015a565b600086848301015280965050505050505092915050565b600181811c90821680620001a557607f821691505b602082108103620001c657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021a57600081815260208120601f850160051c81016020861015620001f55750805b601f850160051c820191505b81811015620002165782815560010162000201565b5050505b505050565b81516001600160401b038111156200023b576200023b620000a5565b62000253816200024c845462000190565b84620001cc565b602080601f8311600181146200028b5760008415620002725750858301515b600019600386901b1c1916600185901b17855562000216565b600085815260208120601f198616915b82811015620002bc578886015182559484019460019091019084016200029b565b5085821015620002db5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6107ac80620002fb6000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063782f08ae11610050578063782f08ae1461009f5780638da5cb5b146100b2578063f2fde38b146100da57600080fd5b80630e89341c1461006c578063715018a614610095575b600080fd5b61007f61007a3660046104c0565b6100ed565b60405161008c91906104d9565b60405180910390f35b61009d6102cc565b005b61009d6100ad366004610527565b6102e0565b60005460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161008c565b61009d6100e83660046105a3565b610342565b60008181526002602052604081208054606092919061010b906105e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610137906105e0565b80156101845780601f1061015957610100808354040283529160200191610184565b820191906000526020600020905b81548152906001019060200180831161016757829003601f168201915b5050505050905060006001805461019a906105e0565b80601f01602080910402602001604051908101604052809291908181526020018280546101c6906105e0565b80156102135780601f106101e857610100808354040283529160200191610213565b820191906000526020600020905b8154815290600101906020018083116101f657829003601f168201915b50505050509050805160000361022a575092915050565b815115610238575092915050565b60018054610245906105e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610271906105e0565b80156102be5780601f10610293576101008083540402835291602001916102be565b820191906000526020600020905b8154815290600101906020018083116102a157829003601f168201915b505050505092505050919050565b6102d46103e4565b6102de600061044b565b565b6102e86103e4565b600083815260026020526040902061030182848361067f565b507fa7527b31563240d0f5f29d80c2f13916d38a7b2b19b892c43486ed47722f2ffb83838360405161033593929190610740565b60405180910390a1505050565b61034a6103e4565b73ffffffffffffffffffffffffffffffffffffffff81166103d85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6103e18161044b565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102de5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103cf565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156104d257600080fd5b5035919050565b600060208083528351808285015260005b81811015610506578581018301518582016040015282016104ea565b506000604082860101526040601f19601f8301168501019250505092915050565b60008060006040848603121561053c57600080fd5b83359250602084013567ffffffffffffffff8082111561055b57600080fd5b818601915086601f83011261056f57600080fd5b81358181111561057e57600080fd5b87602082850101111561059057600080fd5b6020830194508093505050509250925092565b6000602082840312156105b557600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146105d957600080fd5b9392505050565b600181811c908216806105f457607f821691505b60208210810361061457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b601f82111561067a57600081815260208120601f850160051c810160208610156106575750805b601f850160051c820191505b8181101561067657828155600101610663565b5050505b505050565b67ffffffffffffffff8311156106975761069761061a565b6106ab836106a583546105e0565b83610630565b6000601f8411600181146106df57600085156106c75750838201355b600019600387901b1c1916600186901b178355610739565b600083815260209020601f19861690835b8281101561071057868501358255602094850194600190920191016106f0565b508682101561072d5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f191601019291505056fea26469706673582212208951986aefd3b3757c9d4d7064913d01580edd5da376332b7671bdab1d0caa3a64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c8063782f08ae11610050578063782f08ae1461009f5780638da5cb5b146100b2578063f2fde38b146100da57600080fd5b80630e89341c1461006c578063715018a614610095575b600080fd5b61007f61007a3660046104c0565b6100ed565b60405161008c91906104d9565b60405180910390f35b61009d6102cc565b005b61009d6100ad366004610527565b6102e0565b60005460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161008c565b61009d6100e83660046105a3565b610342565b60008181526002602052604081208054606092919061010b906105e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610137906105e0565b80156101845780601f1061015957610100808354040283529160200191610184565b820191906000526020600020905b81548152906001019060200180831161016757829003601f168201915b5050505050905060006001805461019a906105e0565b80601f01602080910402602001604051908101604052809291908181526020018280546101c6906105e0565b80156102135780601f106101e857610100808354040283529160200191610213565b820191906000526020600020905b8154815290600101906020018083116101f657829003601f168201915b50505050509050805160000361022a575092915050565b815115610238575092915050565b60018054610245906105e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610271906105e0565b80156102be5780601f10610293576101008083540402835291602001916102be565b820191906000526020600020905b8154815290600101906020018083116102a157829003601f168201915b505050505092505050919050565b6102d46103e4565b6102de600061044b565b565b6102e86103e4565b600083815260026020526040902061030182848361067f565b507fa7527b31563240d0f5f29d80c2f13916d38a7b2b19b892c43486ed47722f2ffb83838360405161033593929190610740565b60405180910390a1505050565b61034a6103e4565b73ffffffffffffffffffffffffffffffffffffffff81166103d85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6103e18161044b565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102de5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103cf565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156104d257600080fd5b5035919050565b600060208083528351808285015260005b81811015610506578581018301518582016040015282016104ea565b506000604082860101526040601f19601f8301168501019250505092915050565b60008060006040848603121561053c57600080fd5b83359250602084013567ffffffffffffffff8082111561055b57600080fd5b818601915086601f83011261056f57600080fd5b81358181111561057e57600080fd5b87602082850101111561059057600080fd5b6020830194508093505050509250925092565b6000602082840312156105b557600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146105d957600080fd5b9392505050565b600181811c908216806105f457607f821691505b60208210810361061457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b601f82111561067a57600081815260208120601f850160051c810160208610156106575750805b601f850160051c820191505b8181101561067657828155600101610663565b5050505b505050565b67ffffffffffffffff8311156106975761069761061a565b6106ab836106a583546105e0565b83610630565b6000601f8411600181146106df57600085156106c75750838201355b600019600387901b1c1916600186901b178355610739565b600083815260209020601f19861690835b8281101561071057868501358255602094850194600190920191016106f0565b508682101561072d5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f191601019291505056fea26469706673582212208951986aefd3b3757c9d4d7064913d01580edd5da376332b7671bdab1d0caa3a64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1556,
        "contract": "contracts/wrapper/MetadataService.sol:MetadataService",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 24120,
        "contract": "contracts/wrapper/MetadataService.sol:MetadataService",
        "label": "_uri",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 24124,
        "contract": "contracts/wrapper/MetadataService.sol:MetadataService",
        "label": "uris",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_string_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}